package com.lockedme;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

import java.util.*;
class File_Functions{
	static File f=null;
	static Scanner sc=null;
	static {
		 f=new File("F:\\Programs_Simlilearn\\root_simplilearn");
		sc=new Scanner(System.in);
	}

	static void returnCurrentFilesInAscendingOrder() {
		List<String> file_name=new ArrayList<String>();
		
		
		String[] s=f.list();
		int cnt=0;
		int count=0;
		for(String s1:s) {
			File f1=new File(f,s1);
			if(f1.isFile()) {
				count++;
			}	
		}
		String []temp=new String[count];
		for(String s1:s) {
			File f1=new File(f,s1);
			if(f1.isFile()) {
				
				temp[cnt++]=s1;
			}	
		}
		for(int i=0;i<temp.length-1;i++) {
			for(int j=i+1;j<temp.length;j++) {
				if(temp[i].toLowerCase().charAt(0)>temp[j].toLowerCase().charAt(0)) {
					String a=temp[i];
					temp[i]=temp[j];
					temp[j]=a;
				}
			}
		}
		Collections.addAll(file_name, temp);
		//Collections.sort(file_name);
		Iterator i=file_name.iterator();
		while(i.hasNext()) {
			System.out.println(i.next());
		}
		
		
	}
	
	static void addNewFile() {
		System.out.println("Enter file name with format(Eg: abc.txt/abc.class etc): ");
		String name=null;
		try {
		name=sc.next();
		}catch(InputMismatchException e) {
			System.out.println("Invalid inputs are given, please give correct input");
		}catch(NullPointerException e) {
			e.printStackTrace();
		}
		name="F:\\Programs_Simlilearn\\root_simplilearn\\"+name;
		File newFile=new File(name);
		
			Boolean b=null;
			try {
				b = newFile.createNewFile();
			} catch (IOException e) {
				e.printStackTrace();
			}
			if(b==false) {
				System.out.println("File already exists !!!");
			}else {
				System.out.println("File has been created in root folder succesfully !!!");
			}
		}
	

	static void deleteFile() throws FileNotFoundException, IOException {
		System.out.println("Enter file name to delete: ");
		String name=sc.next();
		name="F:\\Programs_Simlilearn\\root_simplilearn\\"+name;
		File newFile=new File(name);
		
			Boolean b=null;
			b = newFile.delete();
			if(b==true) {
				System.out.println("File Deleted Successfully !!!");
			}else {
				throw new FileNotFoundException();
			}
	}
	
	static void searchFileName() {
		
List<String> file_name=new ArrayList<String>();
		
		System.out.println("Enter file name you want to search: ");
		String name=sc.next();
		String[] s=f.list();
		int cnt=0;
		int count=0;
		for(String s1:s) {
			File f1=new File(f,s1);
			if(f1.isFile()) {
				if(s1.equals(name)){
					System.out.println(name+" File found succesfully.\n ");
					return;
				}
			  }	else {
				System.out.println(name+" File not found ");
				}
			} // for end
	}
}//class end
public class UserInterface extends File_Functions{
	static Scanner sc=new Scanner(System.in);
	private static void userDetails() {
		System.out.println("\n********* Welcome to LockedMe.com **********\n\n");
		System.out.println("Developer Details\n==================");
		System.out.println("Name:\tRavindra Kumar Sharma");
		System.out.println("Project name: LockedMe.com");
		System.out.println("Email id: ravindra04.94@gmail.com\n...................................\n");
		
	}
	 static void option2() {
		 int ch=0;
		
	 breakMe: while(true) {
		System.out.println("\n*****************\n1. Add a new file\n"
				+ "\n2. Delete a file\n\n3. Search a file\n\n4. Go back to main menu");
		 boolean flag=true;
			while(flag) try {
					ch=sc.nextInt();
					flag=false;
			}
			catch(InputMismatchException e){
				System.out.println("++++Enter the correct input.Try again++++");
				
				sc.nextLine();
			}
			switch(ch) {
				case 1: 
						addNewFile();
					break;
				case 2: 
						try{deleteFile();}
						catch(FileNotFoundException e) {
							System.out.println("File Not Found with this name");
						}
						catch(IOException e) {
							e.printStackTrace();
						}
					break;
				case 3: 
					searchFileName();
					break;
				case 4: 
					System.out.println("****************************************");
					break breakMe;
				default: 
					System.out.println("Wrong input , given try again !!!");
			}//try
		}// while close
	}
	public static void main(String[] args) {
			int ch=0;
			
			UserInterface.userDetails();
			while(true) {
			System.out.println("\nMain Menu \n---------\n1. Display file names in ascending order from root directory\n\n"
					+ "2. Perform Some Operations(Add or Delete or Search)\n\n3. Close Application");
			boolean flag=true;
	
		
			while(flag) try {
				ch=sc.nextInt();
				flag=false;
		}
		catch(InputMismatchException e){
			System.out.println("++++Enter the correct input.Try again++++");
			
			sc.nextLine();
		}
	
			switch(ch) {
				case 1: 
					returnCurrentFilesInAscendingOrder();
					break;
				case 2: 
					UserInterface.option2();
					break;
				case 3: 
					System.out.println("**********Thankyou for using LockedMe.com************\n\t\tExit Success !!!");
					System.exit(0);
					break;
				default: 
					System.out.println("Wrong input , given try again !!!");
			}
	
		}//while close
	}

}
